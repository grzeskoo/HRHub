@page "/Register"
@using HRHub_UI.Models
@using HRHub_UI.Contracts
@inject IAuthenticationRepository _authrepo
@inject NavigationManager _navMan
<div>
    <div class="card">

        <h3 class="card-title">Regster Now</h3>
        @if (!response)
        {
            <div class="alert alert-danger">

                <p> Something went wrong with the registration attempt</p>
            </div>
        }



        <div class="card-body">


            <EditForm Model="Model" OnValidSubmit="HandleRegistration">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="form-group">
                    <label for="email">Email Address</label>
                    <InputText Id="email" class="form-control" @bind-Value="Model.EmailAddress" />
                    <ValidationMessage For="@(() => Model.EmailAddress)" />

                </div>
                <div class="form-group">
                    <label for="email">Register</label>
                    <InputText Id="password" type="password" class="form-control" @bind-Value="Model.Password" />
                    <ValidationMessage For="@(() => Model.Password)" />

                </div>
                <div class="form-group">
                    <label for="email">confirmpassword</label>
                    <InputText Id="confirmpassword" type="password" class="form-control" @bind-Value="Model.ConfirmPassword" />
                    <ValidationMessage For="@(() => Model.ConfirmPassword)" />

                </div>
                <button type="submit" class="btn btn-primary btn-block">Submit</button>
            </EditForm>
        </div>
    </div>

</div>


@code {
    private RegisterModel Model = new RegisterModel();
    bool response = false;

    private async Task HandleRegistration()
    {
         response = await _authrepo.Register(Model);


        if (response)
        {
            _navMan.NavigateTo("/login");
        }
    }
}
